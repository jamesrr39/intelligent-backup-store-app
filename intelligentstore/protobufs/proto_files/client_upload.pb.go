// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto_files/client_upload.proto

/*
Package protobufgenerated is a generated protocol buffer package.

It is generated from these files:
	proto_files/client_upload.proto

It has these top-level messages:
	FileInfoProto
	RelativePathAndHashProto
	FileContentsProto
	OpenTxRequest
	OpenTxResponse
	GetRequiredHashesRequest
	GetRequiredHashesResponse
	SymlinkWithRelativePath
	UploadSymlinksRequest
*/
package protobufgenerated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileType int32

const (
	FileType_UNKNOWN FileType = 0
	FileType_REGULAR FileType = 1
	FileType_SYMLINK FileType = 2
)

var FileType_name = map[int32]string{
	0: "UNKNOWN",
	1: "REGULAR",
	2: "SYMLINK",
}
var FileType_value = map[string]int32{
	"UNKNOWN": 0,
	"REGULAR": 1,
	"SYMLINK": 2,
}

func (x FileType) String() string {
	return proto.EnumName(FileType_name, int32(x))
}
func (FileType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FileInfoProto struct {
	FileType     FileType `protobuf:"varint,4,opt,name=fileType,enum=protobufgenerated.FileType" json:"fileType,omitempty"`
	RelativePath string   `protobuf:"bytes,1,opt,name=relativePath" json:"relativePath,omitempty"`
	ModTime      int64    `protobuf:"varint,2,opt,name=modTime" json:"modTime,omitempty"`
	Size         int64    `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *FileInfoProto) Reset()                    { *m = FileInfoProto{} }
func (m *FileInfoProto) String() string            { return proto.CompactTextString(m) }
func (*FileInfoProto) ProtoMessage()               {}
func (*FileInfoProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FileInfoProto) GetFileType() FileType {
	if m != nil {
		return m.FileType
	}
	return FileType_UNKNOWN
}

func (m *FileInfoProto) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func (m *FileInfoProto) GetModTime() int64 {
	if m != nil {
		return m.ModTime
	}
	return 0
}

func (m *FileInfoProto) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type RelativePathAndHashProto struct {
	RelativePath string `protobuf:"bytes,1,opt,name=relativePath" json:"relativePath,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
}

func (m *RelativePathAndHashProto) Reset()                    { *m = RelativePathAndHashProto{} }
func (m *RelativePathAndHashProto) String() string            { return proto.CompactTextString(m) }
func (*RelativePathAndHashProto) ProtoMessage()               {}
func (*RelativePathAndHashProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RelativePathAndHashProto) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func (m *RelativePathAndHashProto) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type FileContentsProto struct {
	Contents []byte `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (m *FileContentsProto) Reset()                    { *m = FileContentsProto{} }
func (m *FileContentsProto) String() string            { return proto.CompactTextString(m) }
func (*FileContentsProto) ProtoMessage()               {}
func (*FileContentsProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FileContentsProto) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type OpenTxRequest struct {
	FileInfos []*FileInfoProto `protobuf:"bytes,1,rep,name=fileInfos" json:"fileInfos,omitempty"`
}

func (m *OpenTxRequest) Reset()                    { *m = OpenTxRequest{} }
func (m *OpenTxRequest) String() string            { return proto.CompactTextString(m) }
func (*OpenTxRequest) ProtoMessage()               {}
func (*OpenTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OpenTxRequest) GetFileInfos() []*FileInfoProto {
	if m != nil {
		return m.FileInfos
	}
	return nil
}

type OpenTxResponse struct {
	RevisionID            int64    `protobuf:"varint,1,opt,name=revisionID" json:"revisionID,omitempty"`
	RequiredRelativePaths []string `protobuf:"bytes,2,rep,name=requiredRelativePaths" json:"requiredRelativePaths,omitempty"`
}

func (m *OpenTxResponse) Reset()                    { *m = OpenTxResponse{} }
func (m *OpenTxResponse) String() string            { return proto.CompactTextString(m) }
func (*OpenTxResponse) ProtoMessage()               {}
func (*OpenTxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OpenTxResponse) GetRevisionID() int64 {
	if m != nil {
		return m.RevisionID
	}
	return 0
}

func (m *OpenTxResponse) GetRequiredRelativePaths() []string {
	if m != nil {
		return m.RequiredRelativePaths
	}
	return nil
}

type GetRequiredHashesRequest struct {
	RelativePathsAndHashes []*RelativePathAndHashProto `protobuf:"bytes,1,rep,name=relativePathsAndHashes" json:"relativePathsAndHashes,omitempty"`
}

func (m *GetRequiredHashesRequest) Reset()                    { *m = GetRequiredHashesRequest{} }
func (m *GetRequiredHashesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequiredHashesRequest) ProtoMessage()               {}
func (*GetRequiredHashesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRequiredHashesRequest) GetRelativePathsAndHashes() []*RelativePathAndHashProto {
	if m != nil {
		return m.RelativePathsAndHashes
	}
	return nil
}

type GetRequiredHashesResponse struct {
	Hashes []string `protobuf:"bytes,1,rep,name=hashes" json:"hashes,omitempty"`
}

func (m *GetRequiredHashesResponse) Reset()                    { *m = GetRequiredHashesResponse{} }
func (m *GetRequiredHashesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRequiredHashesResponse) ProtoMessage()               {}
func (*GetRequiredHashesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetRequiredHashesResponse) GetHashes() []string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type SymlinkWithRelativePath struct {
	RelativePath string `protobuf:"bytes,1,opt,name=relativePath" json:"relativePath,omitempty"`
	Dest         string `protobuf:"bytes,2,opt,name=dest" json:"dest,omitempty"`
}

func (m *SymlinkWithRelativePath) Reset()                    { *m = SymlinkWithRelativePath{} }
func (m *SymlinkWithRelativePath) String() string            { return proto.CompactTextString(m) }
func (*SymlinkWithRelativePath) ProtoMessage()               {}
func (*SymlinkWithRelativePath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SymlinkWithRelativePath) GetRelativePath() string {
	if m != nil {
		return m.RelativePath
	}
	return ""
}

func (m *SymlinkWithRelativePath) GetDest() string {
	if m != nil {
		return m.Dest
	}
	return ""
}

type UploadSymlinksRequest struct {
	SymlinksWithRelativePaths []*SymlinkWithRelativePath `protobuf:"bytes,1,rep,name=symlinksWithRelativePaths" json:"symlinksWithRelativePaths,omitempty"`
}

func (m *UploadSymlinksRequest) Reset()                    { *m = UploadSymlinksRequest{} }
func (m *UploadSymlinksRequest) String() string            { return proto.CompactTextString(m) }
func (*UploadSymlinksRequest) ProtoMessage()               {}
func (*UploadSymlinksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UploadSymlinksRequest) GetSymlinksWithRelativePaths() []*SymlinkWithRelativePath {
	if m != nil {
		return m.SymlinksWithRelativePaths
	}
	return nil
}

func init() {
	proto.RegisterType((*FileInfoProto)(nil), "protobufgenerated.FileInfoProto")
	proto.RegisterType((*RelativePathAndHashProto)(nil), "protobufgenerated.RelativePathAndHashProto")
	proto.RegisterType((*FileContentsProto)(nil), "protobufgenerated.FileContentsProto")
	proto.RegisterType((*OpenTxRequest)(nil), "protobufgenerated.OpenTxRequest")
	proto.RegisterType((*OpenTxResponse)(nil), "protobufgenerated.OpenTxResponse")
	proto.RegisterType((*GetRequiredHashesRequest)(nil), "protobufgenerated.GetRequiredHashesRequest")
	proto.RegisterType((*GetRequiredHashesResponse)(nil), "protobufgenerated.GetRequiredHashesResponse")
	proto.RegisterType((*SymlinkWithRelativePath)(nil), "protobufgenerated.SymlinkWithRelativePath")
	proto.RegisterType((*UploadSymlinksRequest)(nil), "protobufgenerated.UploadSymlinksRequest")
	proto.RegisterEnum("protobufgenerated.FileType", FileType_name, FileType_value)
}

func init() { proto.RegisterFile("proto_files/client_upload.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0xd4, 0xc6, 0xd3, 0x0f, 0xa5, 0x2b, 0xb5, 0xb8, 0x20, 0x81, 0xb5, 0x27, 0xab,
	0x48, 0xa9, 0x68, 0x91, 0xb8, 0x21, 0x55, 0x40, 0x4b, 0xd4, 0x92, 0x94, 0x69, 0xa2, 0x8a, 0x53,
	0xe5, 0xc6, 0x63, 0xbc, 0xc2, 0x59, 0xbb, 0xde, 0x4d, 0x45, 0xb9, 0x20, 0xfe, 0x06, 0xbf, 0x16,
	0x79, 0x6b, 0xa7, 0x86, 0xc6, 0x52, 0x4e, 0x3b, 0x9f, 0xef, 0xcd, 0xbc, 0xd1, 0xc2, 0xcb, 0x2c,
	0x4f, 0x75, 0x7a, 0x15, 0x89, 0x84, 0xd4, 0xfe, 0x24, 0x11, 0x24, 0xf5, 0xd5, 0x2c, 0x4b, 0xd2,
	0x20, 0xec, 0x99, 0x0c, 0xdb, 0x32, 0xcf, 0xf5, 0x2c, 0xfa, 0x46, 0x92, 0xf2, 0x40, 0x53, 0xc8,
	0xff, 0x58, 0xb0, 0x71, 0x2c, 0x12, 0xea, 0xcb, 0x28, 0x3d, 0x37, 0x45, 0x6f, 0xa1, 0x53, 0x20,
	0x8c, 0xee, 0x32, 0x72, 0xdb, 0x9e, 0xe5, 0x6f, 0x1e, 0x3c, 0xef, 0x3d, 0xea, 0xeb, 0x1d, 0x97,
	0x25, 0x38, 0x2f, 0x66, 0x1c, 0xd6, 0x73, 0x4a, 0x02, 0x2d, 0x6e, 0xe9, 0x3c, 0xd0, 0xb1, 0x6b,
	0x79, 0x96, 0xef, 0xe0, 0x3f, 0x31, 0xe6, 0xc2, 0xea, 0x34, 0x0d, 0x47, 0x62, 0x4a, 0x6e, 0xcb,
	0xb3, 0x7c, 0x1b, 0x2b, 0x97, 0x31, 0x68, 0x2b, 0xf1, 0x93, 0x5c, 0xdb, 0x84, 0x8d, 0xcd, 0x11,
	0x5c, 0xac, 0x75, 0x1f, 0xc9, 0xf0, 0x53, 0xa0, 0xe2, 0xfb, 0x31, 0x97, 0x61, 0x63, 0xd0, 0x8e,
	0x03, 0x15, 0x1b, 0x2a, 0x07, 0x8d, 0xcd, 0xf7, 0x61, 0xab, 0x98, 0xfd, 0x7d, 0x2a, 0x35, 0x49,
	0xad, 0xee, 0xc1, 0x9e, 0x41, 0x67, 0x52, 0x06, 0x0c, 0xd0, 0x3a, 0xce, 0x7d, 0x3e, 0x84, 0x8d,
	0x61, 0x46, 0x72, 0xf4, 0x03, 0xe9, 0x66, 0x46, 0x4a, 0xb3, 0x77, 0xe0, 0x44, 0xa5, 0x62, 0x45,
	0xb5, 0xed, 0xaf, 0x1d, 0x78, 0x0d, 0x0a, 0xcd, 0x55, 0xc5, 0x87, 0x16, 0x1e, 0xc1, 0x66, 0x05,
	0xa8, 0xb2, 0x54, 0x2a, 0x62, 0x2f, 0x00, 0x72, 0xba, 0x15, 0x4a, 0xa4, 0xb2, 0xff, 0xc1, 0x0c,
	0x60, 0x63, 0x2d, 0xc2, 0xde, 0xc0, 0x76, 0x4e, 0x37, 0x33, 0x91, 0x53, 0x58, 0xd7, 0x43, 0xb9,
	0x2d, 0xcf, 0xf6, 0x1d, 0x5c, 0x9c, 0xe4, 0xbf, 0xc0, 0x3d, 0x21, 0x8d, 0x65, 0xae, 0x50, 0x8e,
	0x54, 0xb5, 0xc3, 0x04, 0x76, 0xea, 0x4a, 0xa9, 0x52, 0x5a, 0xaa, 0x16, 0x7a, 0xb5, 0x60, 0xa1,
	0xa6, 0x53, 0x60, 0x03, 0x14, 0x3f, 0x84, 0xdd, 0x05, 0x03, 0x94, 0x3b, 0xef, 0xc0, 0x4a, 0xfc,
	0xc0, 0xe8, 0x60, 0xe9, 0xf1, 0x2f, 0xf0, 0xf4, 0xe2, 0x6e, 0x9a, 0x08, 0xf9, 0xfd, 0x52, 0xe8,
	0xb8, 0xce, 0xb9, 0xec, 0xc9, 0x43, 0x52, 0xba, 0x3a, 0x79, 0x61, 0xf3, 0xdf, 0x16, 0x6c, 0x8f,
	0xcd, 0x3f, 0x28, 0x91, 0xe7, 0x32, 0xc4, 0xb0, 0xab, 0xca, 0xd0, 0xff, 0x6c, 0x95, 0x12, 0x7b,
	0x0b, 0x94, 0x68, 0x18, 0x10, 0x9b, 0xc1, 0xf6, 0x5e, 0x43, 0xa7, 0xfa, 0x32, 0x6c, 0x0d, 0x56,
	0xc7, 0x83, 0xd3, 0xc1, 0xf0, 0x72, 0xd0, 0x7d, 0x52, 0x38, 0xf8, 0xf1, 0x64, 0x7c, 0x76, 0x84,
	0x5d, 0xab, 0x70, 0x2e, 0xbe, 0x7e, 0x3e, 0xeb, 0x0f, 0x4e, 0xbb, 0xad, 0xeb, 0x15, 0x43, 0x7c,
	0xf8, 0x37, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xf8, 0x5d, 0xaf, 0xd7, 0x03, 0x00, 0x00,
}
